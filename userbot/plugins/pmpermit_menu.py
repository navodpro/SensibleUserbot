# if you change credits, you get anal cancer and get murdered by russians in 3 days.
"""
Support chatbox for pmpermit.
Used by incoming messages with trigger as /start
Will not work for already approved people.
"""
import asyncio
import io 
import telethon.sync
from telethon.tl.functions.users import GetFullUserRequest
import userbot.plugins.sql_helper.pmpermit_sql as pmpermit_sql
from telethon import events, errors, functions, types
from userbot import ALIVE_NAME
from userbot.utils import admin_cmd


DEFAULTUSER = str(ALIVE_NAME) if ALIVE_NAME else "Set ALIVE_NAME in heroku vars"
PREV_REPLY_MESSAGE = {}


@command(pattern=r"\/start", incoming=True)
async def _(event):
    chat_id = event.from_id
    userid = event.sender_id
    if not pmpermit_sql.is_approved(chat_id):
        chat = await event.get_chat()
        if event.fwd_from:
            return
        if event.is_private:
         
         PM = ("`Hello. You are accessing the availabe menu of my peru master,`"
               f"{DEFAULTUSER}.\n"
               "__‡∂î‡∂∫‡∑è ‡∂â‡∂±‡∑ä‡∂∂‡∑ú‡∂ö‡∑ä‡∑É‡∑ä ‡∂Ü‡∂¥‡∑î ‡∑Ñ‡∑ö‡∂≠‡∑î‡∑Ä ‡∂Ø‡∑ê‡∂±‡∂ú‡∂±‡∑ä‡∂± ‡∂¥‡∑î‡∂Ω‡∑î‡∑Ä‡∂±‡∑ä‡∂Ø?__\n"
               "**‡∂â‡∂±‡∑ä‡∂∂‡∑ú‡∂ö‡∑ä‡∑É‡∑ä ‡∂Ü‡∂¥‡∑î ‡∑Ñ‡∑ö‡∂≠‡∑î‡∑Ä ‡∂≠‡∑ù‡∂ª‡∂±‡∑ä‡∂±.:**\n\n"
               "`1`. ‡∂†‡∑ê‡∂ß‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.\n"
               "`2`. ‡∂Ø‡∑ô‡∂∫‡∂ö‡∑ä ‡∂Ö‡∑Ñ‡∂ú‡∂±‡∑ä‡∂±.\n"

               "`3`. ‡∂ã‡∂Ø‡∑Ä‡∑ä‡∑Ä‡∂ö‡∑ä ‡∂â‡∂Ω‡∑ä‡∂Ω‡∂ú‡∂±‡∑ä‡∂±.\n"
               "`4`. ‡∑Ä‡∑ô‡∂± ‡∂Ø‡∑ö‡∂ö‡∂ß.\n")
         ONE = ("__‡∑Ñ‡∂ª‡∑í. ‡∂î‡∂∫‡∑è‡∂ú‡∑ô ‡∂â‡∂Ω‡∑ä‡∂Ω‡∑ì‡∂∏ ‡∂∫‡∑ê‡∑Ä‡∑ä‡∑Ä‡∑è.‡∂â‡∂±‡∑ä‡∂∂‡∑ú‡∂ö‡∑ä‡∑É‡∑ä ‡∂Ü‡∂¥‡∑î ‡∂ú‡∂∏‡∂±‡∑ä ‡∂∏‡∑ê‡∑É‡∑ö‡∂¢‡∑ä ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ø‡∑è‡∑Ä‡∑í.‡∂î‡∂±‡∑ä‡∂Ω‡∂∫‡∑í‡∂±‡∑ä ‡∂ë‡∂±‡∂ö‡∂±‡∑ä ‡∂â‡∂±‡∑ä‡∂± ‡∑Ñ‡∑ú‡∂Ø‡∑ö ‡∂¥‡∑ú‡∂©‡∑ä‡∂©‡∂ö‡∑ä.__\n\n"
                "**‚ö†Ô∏è ‡∑É‡∑ä‡∂¥‡∑ë‡∂∏‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂± try ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂ë‡∂¥‡∑è ‡∂¥‡∑ä‡∂Ω‡∑ì‡∑É‡∑ä.. ‚ö†Ô∏è**\n\n"
                "__Use__ `/start` __to go back to the main menu.__")
         TWO = (" `‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÑ  \n‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà\n‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà\n‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà\n‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà\n‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà\n‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà\n‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÄ‚ñÄ‚ñÄ‚ñà‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñÄ  \n‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñë‚ñë‚ñë‚ñë‚ñà  \n‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñë‚ñë‚ñë‚ñà  \n‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñë‚ñë‚ñà  \n‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñë‚ñë‚ñà  \n‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñÄ‚ñÄ `\n\ ‡∂∏‡∂∏ ‡∂∏‡∑ö‡∂ö‡∂ß ‡∂ö‡∑ê‡∂∏‡∂≠‡∑í ‡∂±‡∑ë.‡∑É‡∑ú‡∂ª‡∑í. ‡∂î‡∂±‡∑ä‡∂Ω‡∂∫‡∑í‡∂±‡∑ä ‡∂á‡∑Ä‡∑í‡∂≠‡∑ä ‡∂Ö‡∂±‡∑ä‡∂∂‡∑ä‡∂Ω‡∑ú‡∂ö‡∑ä ‡∂ö‡∂ª‡∂±‡∂ö‡∂Ω‡∑ä ‡∂î‡∂∫‡∑è‡∑Ä ‡∂∂‡∑ä‡∂Ω‡∑ú‡∂ö‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∑Ä‡∑ô‡∂±‡∑Ä‡∑è.‡∂≠‡∂ª‡∑Ñ ‡∑Ä‡∑ô‡∂±‡∑ä‡∂± ‡∂ë‡∂¥‡∑è.**")
         FOUR = ("__‡∑Ñ‡∂ª‡∑í ‡∑Ñ‡∂ª‡∑í.‡∂ë‡∂∫‡∑è ‡∂≠‡∑è‡∂∏ ‡∂∏‡∑ê‡∑É‡∑ö‡∂¢‡∑ä ‡∂ë‡∂ö ‡∂Ø‡∑ê‡∂ö‡∑ä‡∂ö‡∑ô ‡∂±‡∑ë.‡∂Ø‡∑ê‡∂ö‡∂¥‡∑î ‡∂ú‡∂∏‡∂±‡∑ä ‡∂ª‡∑í‡∂¥‡∑ä‡∂Ω‡∂∫‡∑í ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ø‡∑è‡∑Ä‡∑í ‡∂î‡∂∫‡∑è‡∂ß..__\n __‡∂Ö‡∂±‡∑í‡∂≠‡∑ä ‡∑Ñ‡∑ö‡∂≠‡∑î‡∑Ä ‡∂ë‡∂∫‡∑è‡∂ß ‡∂Ø‡∑ê‡∂±‡∂ß‡∂∏‡∂≠‡∑ä ‡∂∏‡∑ê‡∑É‡∑ö‡∂¢‡∑ä ‡∂¥‡∑í‡∂ª‡∑í‡∂Ω ‡∂≠‡∑í‡∂∫‡∑ô‡∂±‡∑ä‡∂±‡∑ô.‡∂í‡∑Ä ‡∂ö‡∑í‡∂∫‡∑Ä‡∂±‡∑ä‡∂±‡∂≠‡∑ä ‡∂ï‡∂±‡∂±‡∑ö ‡∂ë‡∂∫‡∑è.üò∂__\n **‚ö†Ô∏è ‡∂¥‡∑ä‡∂Ω‡∑ì‡∑É‡∑ä ‡∑É‡∑ä‡∂¥‡∑ë‡∂∏‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂ë‡∂¥‡∑è.. ‚ö†Ô∏è**")
         FIVE = ("`‚ö†Ô∏è ‡∂Ö‡∂±‡∑ö ‡∂¥‡∑ä‡∂Ω‡∑ì‡∑É‡∑ä .‡∑É‡∑ä‡∂¥‡∑ë‡∂∏‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂ë‡∂¥‡∑è. ‚ö†Ô∏è.**")
         LWARN = ("**‚ö†Ô∏è ‡∑É‡∑ä‡∂¥‡∑ë‡∂∏‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂ë‡∂¥‡∑è.‡∑Ñ‡∂ª‡∑í‡∂Ø?‡∂ë‡∂∫‡∑è ‡∂ë‡∂±‡∂ö‡∂Ω‡∑ä ‡∂â‡∂±‡∑ä‡∂± ‡∂î‡∂±‡∑ä‡∂Ω‡∂∫‡∑í‡∂±‡∑ä. ‚ö†Ô∏è.**\n__Use__ `/start` __to go back to the main menu.__")
     
        async with borg.conversation(chat) as conv:
         await borg.send_message(chat, PM)
         chat_id = event.from_id
         response = await conv.get_response(chat)
         y = response.text
         if y == "1":
             await borg.send_message(chat, ONE)
             response = await conv.get_response(chat)
             await event.delete()
             if not response.text == "/start":
                 await response.delete()
                 await borg.send_message(chat, LWARN)
                 response = await conv.get_response(chat)
                 await event.delete()
                 await response.delete()
                 response = await conv.get_response(chat)
                 if not response.text == "/start":
                     await borg.send_message(chat, TWO)
                     await asyncio.sleep(3)
                     await event.client(functions.contacts.BlockRequest(chat_id))
         elif y == "2":
             await borg.send_message(chat, LWARN)
             response = await conv.get_response(chat)
             if not response.text == "/start":
                 await borg.send_message(chat, TWO)
                 await asyncio.sleep(3)
                 await event.client(functions.contacts.BlockRequest(chat_id))
         

         elif y == "3":
             await borg.send_message(chat, FOUR)
             response = await conv.get_response(chat)
             await event.delete()
             await response.delete()
             if not response.text == "/start":
                 await borg.send_message(chat, LWARN)
                 await event.delete()
                 response = await conv.get_response(chat)
                 if not response.text == "/start":
                     await borg.send_message(chat, TWO)
                     await asyncio.sleep(3)
                     await event.client(functions.contacts.BlockRequest(chat_id))
         elif y == "4":
             await borg.send_message(chat,FIVE)
             response = await conv.get_response(chat)
             if not response.text == "/start":
                 await borg.send_message(chat, LWARN)
                 response = await conv.get_response(chat)
                 if not response.text == "/start":
                     await borg.send_message(chat, TWO)
                     await asyncio.sleep(3)
                     await event.client(functions.contacts.BlockRequest(chat_id))
         else:
             await borg.send_message(chat, "`You have entered an invalid command. Please send /start again or do not send another message if you do not wish to be blocked and reported.`")
             response = await conv.get_response(chat)
             z = response.text
             if not z == "/start":
                 await borg.send_message(chat, LWARN)
                 await conv.get_response(chat)
                 if not response.text == "/start":
                     await borg.send_message(chat, TWO)
                     await asyncio.sleep(3)
                     await event.client(functions.contacts.BlockRequest(chat_id))

